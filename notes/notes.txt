2010-03-11
==========

Goal: Make a Rails app for creating and reviewing flashcards.

2010-03-17
==========

Basic Deck and Card models are set up. Now, I'd like to have a very simple way
of 'quizzing' the user on a deck.

I guess the best way would be to have one static page, and then use JavaScript
to update it as we go. Let's walk through the user experience:

-- Display front of first card. 
-- Click the 'Reveal' button.
-- Display back of first card.
-- Ask if correct? Clicking Yes or No will reveal next card, or summary if at
the end.

2010-04-03
==========

Quiz should have a way to exit. Also doesn't need Register / Login buttons.
After quiz, should be redirected back to home, or somewhere else.

If not logged in, should have access only to quiz, not scaffolding for 
decks/cards, etc. 

Front page should have list of users, to see their decks.

...

After consideration, I decided that the quiz should have register/login
links, but they should be at the bottom. In fact, these links should always
be at the bottom.

Part 2
======

Need to clean up access for logged-in versus anonymous users.

If logged in, should have a navigation bar (at top?), with links to:
   - Home
   - My Decks
   - Edit Profile
   - Logout

If not logged in, should have navigation area with:
   - Home
   - Register
   - Login

2010-04-05
==========

The basic functionality is in good shape now. The next steps should focus on
making things look nice. This includes both the page layout/colors/etc., and 
the way the quiz works.

2010-040-27
==========

I've been challenged by Digital Advisor to implement a multiple-choice game 
based on the flashcards. Here are some notes about what I'll do:

mulitple choice...

So, for each card, gather up correct answer, plus four random answers
   (it would be a problem if some cards have the same answers, because there could be both a right and wrong with the same text)

User must select answer. how?
  radio buttons?
  plain link?
  
What happens if wrong?
  tell user or no? (probably yes)
  don't let them fix it, since we'll keep score

keeping score:
  do it, give running tally, and final score at the end

